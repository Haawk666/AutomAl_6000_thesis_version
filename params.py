# Program imports:
import core
import utils
# External imports:
import numpy as np
from matplotlib import pyplot as plt
from matplotlib.gridspec import GridSpec
import logging
# Instantiate logger
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)


def calculate_params(files, exclude_edges=True, exclude_matrix=False, exclude_particle=False, exclude_hidden=False,
                     exclude_1=False, exclude_2=False, exclude_3=False, exclude_4=False, plot=False):

    # Accumulate data:
    logger.info('Accumulating data...')
    values = []
    for i in range(0, 7):
        values.append([])
        for j in range(0, 7):
            values[i].append([])
    number_of_files = 0
    number_of_vertices = 0
    for file_ in iter(files.splitlines()):
        instance = core.SuchSoftware.load(file_)
        number_of_files += 1

        instance.calc_avg_gamma()
        instance.normalize_gamma()
        instance.graph.map_friends()
        instance.graph.sort_subsets_by_distance()

        for vertex in instance.graph.vertices:
            if not (exclude_edges and vertex.is_edge_column):
                if not (exclude_matrix and not vertex.is_in_precipitate):
                    if not (exclude_particle and vertex.is_in_precipitate):
                        if not (exclude_hidden and not vertex.show_in_overlay):
                            if not (exclude_1 and vertex.flag_1):
                                if not (exclude_2 and vertex.flag_2):
                                    if not (exclude_3 and vertex.flag_3):
                                        if not (exclude_4 and vertex.flag_4):

                                            number_of_vertices += 1

                                            peak_gamma = vertex.normalized_peak_gamma
                                            avg_gamma = vertex.normalized_avg_gamma
                                            alpha = instance.graph.produce_alpha_angles(vertex.i)
                                            theta = instance.graph.produce_theta_angles(vertex.i, exclude_angles_from_inconsistent_meshes=True)
                                            alpha_max = max(alpha)
                                            alpha_min = min(alpha)
                                            if theta:
                                                theta_max = max(theta)
                                                theta_min = min(theta)
                                                theta_mean = utils.mean_val(theta)
                                            else:
                                                theta_max = 0
                                                theta_min = 0
                                                theta_mean = 0

                                            index = -1

                                            if vertex.species() == 'Cu':
                                                index = 0

                                            elif vertex.species() == 'Si':
                                                if vertex.flag_2:
                                                    index = 2
                                                else:
                                                    index = 1

                                            elif vertex.species() == 'Al':
                                                if vertex.is_in_precipitate:
                                                    index = 3
                                                else:
                                                    index = 4

                                            elif vertex.species() == 'Mg':
                                                if alpha_max <= 3.15:
                                                    index = 5
                                                else:
                                                    index = 6

                                            values[index][0].append(alpha_min)
                                            values[index][1].append(alpha_max)
                                            values[index][2].append(theta_min)
                                            values[index][3].append(theta_max)
                                            values[index][4].append(theta_mean)
                                            values[index][5].append(peak_gamma)
                                            values[index][6].append(avg_gamma)

    # Calculate model parameters:
    logger.info('Calculating model parameters...')
    params = []
    covar_matrices = []
    reduced_model_covar_matrices = []
    for i in range(0, 7):
        params.append([])
        covar_matrices.append([])
        reduced_model_covar_matrices.append([])
        for j in range(0, 7):
            covar_matrices[i].append([])
        for j in range(0, 4):
            reduced_model_covar_matrices[i].append([])

    for i, elements in enumerate(values):
        dummy_counter = 0
        for j, data_1 in enumerate(elements):
            if j == 4:
                params[i].append((utils.mean_val(data_1), 0.1))
            else:
                mean = utils.mean_val(data_1)
                std = np.sqrt(utils.variance(data_1))
                if std < 0.000001:
                    std = 0.01
                params[i].append((mean, std))
            for k, data_2 in enumerate(elements):
                covar_matrices[i][j].append(utils.covariance(data_1, data_2))
                if j not in [2, 3, 4] and k not in [2, 3, 4]:
                    reduced_model_covar_matrices[i][dummy_counter].append(covar_matrices[i][j][k])
            if j not in [2, 3, 4]:
                dummy_counter += 1

    # Plot results:
    if plot:
        plot_pane(params, number_of_files, number_of_vertices)

    return params, covar_matrices, reduced_model_covar_matrices


def plot_pane(params, number_of_files, number_of_vertices):
    logger.info('Generating plots...')

    alpha = [
        np.linspace(0.5, 2.5, 1000),
        np.linspace(1.5, 4.5, 1000),
        np.linspace(0.5, 2.5, 1000),
        np.linspace(0.5, 3.5, 1000),
        np.linspace(0.5, 2.5, 1000),
        np.linspace(0, 1, 1000),
        np.linspace(0, 0.8, 1000)
    ]

    fig = plt.figure(constrained_layout=True)
    gs = GridSpec(3, 3, figure=fig)
    ax = [
        fig.add_subplot(gs[0, 0]),
        fig.add_subplot(gs[0, 1]),
        fig.add_subplot(gs[0, 2]),
        fig.add_subplot(gs[1, 0]),
        fig.add_subplot(gs[1, 1]),
        fig.add_subplot(gs[1, 2]),
        fig.add_subplot(gs[2, 1])
    ]

    for i, axis in enumerate(ax):
        axis.plot(alpha[i], utils.normal_dist(alpha[i], params[0][i][0], params[0][i][1]), 'y',
                  label='Cu ($\mu = ${:.2f}, $\sigma = ${:.2f})'.format(params[0][i][0], params[0][i][1]))
        axis.plot(alpha[i], utils.normal_dist(alpha[i], params[1][i][0], params[1][i][1]), 'r',
                  label='Si$_1$ ($\mu = ${:.2f}, $\sigma = ${:.2f})'.format(params[1][i][0], params[1][i][1]))
        axis.plot(alpha[i], utils.normal_dist(alpha[i], params[2][i][0], params[2][i][1]), 'k',
                  label='Si$_2$ ($\mu = ${:.2f}, $\sigma = ${:.2f})'.format(params[2][i][0], params[2][i][1]))
        axis.plot(alpha[i], utils.normal_dist(alpha[i], params[3][i][0], params[3][i][1]), 'g',
                  label='Al$_1$ ($\mu = ${:.2f}, $\sigma = ${:.2f})'.format(params[3][i][0], params[3][i][1]))
        axis.plot(alpha[i], utils.normal_dist(alpha[i], params[4][i][0], params[4][i][1]), 'b',
                  label='Al$_2$ ($\mu = ${:.2f}, $\sigma = ${:.2f})'.format(params[4][i][0], params[4][i][1]))
        axis.plot(alpha[i], utils.normal_dist(alpha[i], params[5][i][0], params[5][i][1]), 'm',
                  label='Mg$_1$ ($\mu = ${:.2f}, $\sigma = ${:.2f})'.format(params[5][i][0], params[5][i][1]))
        axis.plot(alpha[i], utils.normal_dist(alpha[i], params[6][i][0], params[6][i][1]), 'c',
                  label='Mg$_2$ ($\mu = ${:.2f}, $\sigma = ${:.2f})'.format(params[6][i][0], params[6][i][1]))

    ax[0].set_title('Minimum alpha angles fitted density')
    ax[0].set_xlabel('min angle (radians)')
    ax[0].legend()

    ax[1].set_title('Maximum alpha angles fitted density')
    ax[1].set_xlabel('max angle (radians)')
    ax[1].legend()

    ax[2].set_title('Minimum theta angles fitted density')
    ax[2].set_xlabel('min angle (radians)')
    ax[2].legend()

    ax[3].set_title('Maximum theta angles fitted density')
    ax[3].set_xlabel('max angle (radians)')
    ax[3].legend()

    ax[4].set_title('Theta mean fitted density')
    ax[4].set_xlabel('mean angle (radians)')
    ax[4].legend()

    ax[5].set_title('Normalized peak gamma fitted density')
    ax[5].set_xlabel('peak gamma (1)')
    ax[5].legend()

    ax[6].set_title('Normalized average gamma fitted density')
    ax[6].set_xlabel('average gamma (1)')
    ax[6].legend()

    fig.suptitle('98 parameter model fitted densities from {} images'.format(number_of_files))

    logger.info(
        'Plotted parameters over {} files and {} vertices!'.format(number_of_files, number_of_vertices))

    plt.show()


def produce_params(calc=False, files=None):
    if calc:

        params, covar_matrices, reduced_model_covar_matrices = calculate_params(files, plot=True)
        covar_determinants = []
        reduced_model_covar_determinants = []
        inverse_covar_matrices = []
        inverse_reduced_model_covar_matrices = []
        for covar_matrix, reduced_model_covar_matrix in zip(covar_matrices, reduced_model_covar_matrices):
            covar_determinants.append(np.linalg.det(np.array(covar_matrix)))
            reduced_model_covar_determinants.append(np.linalg.det(np.array(reduced_model_covar_matrix)))
            inverse_covar_matrices.append(np.linalg.inv(np.array(covar_matrix)).tolist())
            inverse_reduced_model_covar_matrices.append(np.linalg.inv(np.array(reduced_model_covar_matrix)).tolist())

    else:
        params = [
            [(1.94, 0.15), (2.25, 0.20), (1.94, 0.16), (2.19, 0.13), (2.07, 0.2), (0.52, 0.22), (0.48, 0.14)],
            [(1.94, 0.10), (2.26, 0.11), (1.93, 0.12), (2.26, 0.11), (2.09, 0.2), (0.32, 0.07), (0.32, 0.05)],
            [(1.60, 0.13), (2.45, 0.15), (1.61, 0.14), (2.43, 0.13), (2.09, 0.2), (0.33, 0.06), (0.32, 0.04)],
            [(1.46, 0.13), (3.13, 0.21), (1.37, 0.13), (1.76, 0.14), (1.57, 0.2), (0.29, 0.13), (0.31, 0.08)],
            [(1.54, 0.13), (3.11, 0.08), (1.48, 0.06), (1.66, 0.06), (1.57, 0.2), (0.30, 0.04), (0.31, 0.03)],
            [(1.25, 0.11), (2.63, 0.11), (1.13, 0.06), (1.42, 0.10), (1.26, 0.2), (0.19, 0.09), (0.24, 0.05)],
            [(1.23, 0.07), (3.72, 0.13), (1.10, 0.07), (1.43, 0.11), (1.26, 0.2), (0.14, 0.12), (0.22, 0.06)]
        ]

        covar_matrices = [
            [
                [0.022648650334570496, -0.027645127220884753, 0.0200335378079343, 0.0015594624121189756, 0.010067445926132058, 0.002743395757837704, -0.00019517536806345955],
                [-0.027645127220884753, 0.04084579216897273, -0.025718336788345356, -0.008592483127991712, -0.01782442417822993, -0.004654797440117838, -0.0014262888836593],
                [0.0200335378079343, -0.025718336788345356, 0.024675395084470617, 0.006387820585320769, 0.015340247873176128, 0.0035503578978846317, 0.0010410982595269362],
                [0.0015594624121189756, -0.008592483127991712, 0.006387820585320769, 0.018267707676014548, 0.012518925933027796, 0.005067650443490714, 0.004866515075976046],
                [0.010067445926132058, -0.01782442417822993, 0.015340247873176128, 0.012518925933027796, 0.014667205479115063, 0.004693934424054179, 0.0033841992369680013],
                [0.002743395757837704, -0.004654797440117838, 0.0035503578978846317, 0.005067650443490714, 0.004693934424054179, 0.04777305454209432, 0.02683372194610089],
                [-0.00019517536806345955, -0.0014262888836593, 0.0010410982595269362, 0.004866515075976046, 0.0033841992369680013, 0.02683372194610089, 0.018412469396056032]
            ], [
                [0.010306188761245687, -0.008651122978231673, 0.010813932963714341, -0.007848180405247538, 0.0009313052983587536, 0.00017446462922569904, -0.00045543844108437124],
                [-0.008651122978231673, 0.011728705974255975, -0.00890900782817443, 0.010470808169094608, -0.0007228499968940312, -0.000651922187728199, 7.0917358039492e-05],
                [0.010813932963714341, -0.00890900782817443, 0.013358621895039889, -0.007763852086722958, 0.0020956910615236614, 0.00019694930115491424, -0.000498399256254598],
                [-0.007848180405247538, 0.010470808169094608, -0.007763852086722958, 0.011572889977097474, 0.0003853039767524065, -0.0007707952268365705, -9.421345693527678e-07],
                [0.0009313052983587536, -0.0007228499968940312, 0.0020956910615236614, 0.0003853039767524065, 0.0013227038097855472, 8.693422520112577e-06, -3.036401818677686e-05],
                [0.00017446462922569904, -0.000651922187728199, 0.00019694930115491424, -0.0007707952268365705, 8.693422520112577e-06, 0.005210963912387357, 0.002931902523192387],
                [-0.00045543844108437124, 7.0917358039492e-05, -0.000498399256254598, -9.421345693527678e-07, -3.036401818677686e-05, 0.002931902523192387, 0.002116691221292608]
            ], [
                [0.01678520002721852, -0.013126903237079976, 0.012330325385693987, -0.0069407777446220675, -9.135390777773974e-05, -0.0008529987669254292, -0.0003002618319876916],
                [-0.013126903237079976, 0.022305926985780374, -0.0015982911289726327, 0.00786005255845592, 0.0016194483285311674, 0.0004166108774680984, -0.0006483711749512275],
                [0.012330325385693987, -0.0015982911289726327, 0.020119339288631546, -0.006418821870712919, 0.0038090493936126105, 0.00021622155702654083, 0.00012233040558602375],
                [-0.0069407777446220675, 0.00786005255845592, -0.006418821870712919, 0.017813752913677226, 0.0060248234913863235, -0.0008380345881734296, -0.002032342324832327],
                [-9.135390777773974e-05, 0.0016194483285311674, 0.0038090493936126105, 0.0060248234913863235, 0.00575565313840183, 5.341455621648217e-05, -0.000489042307538778],
                [-0.0008529987669254292, 0.0004166108774680984, 0.00021622155702654083, -0.0008380345881734296, 5.341455621648217e-05, 0.003748167800896899, 0.0023465972932717213],
                [-0.0003002618319876916, -0.0006483711749512275, 0.00012233040558602375, -0.002032342324832327, -0.000489042307538778, 0.0023465972932717213, 0.001968965997741974]
            ], [
                [0.016107288005557895, -0.016942901504210104, 0.003900525263828343, -0.004671836736636052, 0.0009035869814774918, -0.0002097482502627844, -0.00010264358905760681],
                [-0.016942901504210104, 0.045979483249919066, -0.002150487248570599, -0.003969618826281033, -0.0030779526551379167, 0.002052812069807938, 0.001091693401271756],
                [0.003900525263828343, -0.002150487248570599, 0.017249847868575446, -0.002998097679297074, 0.005478703159528016, 0.0006501853587999445, -3.884902747965966e-05],
                [-0.004671836736636052, -0.003969618826281033, -0.002998097679297074, 0.01872915760600197, 0.005121612760494978, 0.00013387871495120805, -0.00019163512774617877],
                [0.0009035869814774918, -0.0030779526551379167, 0.005478703159528016, 0.005121612760494978, 0.004952614988938859, 0.0010925124119038228, 0.00039226111803334604],
                [-0.0002097482502627844, 0.002052812069807938, 0.0006501853587999445, 0.00013387871495120805, 0.0010925124119038228, 0.016845560433143125, 0.010225807306905454],
                [-0.00010264358905760681, 0.001091693401271756, -3.884902747965966e-05, -0.00019163512774617877, 0.00039226111803334604, 0.010225807306905454, 0.007077800371372914]
            ], [
                [0.003422635196015581, -0.0032209052856532767, 0.0008494249590744646, -0.0012381745637875534, -1.007821796696856e-05, -1.39815301941015e-05, -9.99260970413752e-06],
                [-0.0032209052856532767, 0.006839391401543439, 0.0009396564958604061, -0.0009312677335227616, 2.4116892068159658e-05, 2.3311159776708222e-05, -5.616191239811191e-05],
                [0.0008494249590744646, 0.0009396564958604061, 0.003054312462054447, -0.0024618051941323995, 2.3058858092434184e-05, -2.3194523380736623e-05, -0.00011752998474178386],
                [-0.0012381745637875534, -0.0009312677335227616, -0.0024618051941323995, 0.0032219558695637178, 4.25205374520004e-06, 1.0896020914063238e-06, 9.459258956991304e-05],
                [-1.007821796696856e-05, 2.4116892068159658e-05, 2.3058858092434184e-05, 4.25205374520004e-06, 1.0864280100894832e-05, -5.26276548620809e-07, -8.828929457977267e-07],
                [-1.39815301941015e-05, 2.3311159776708222e-05, -2.3194523380736623e-05, 1.0896020914063238e-06, -5.26276548620809e-07, 0.0018716601385022444, 0.001022135426731448],
                [-9.99260970413752e-06, -5.616191239811191e-05, -0.00011752998474178386, 9.459258956991304e-05, -8.828929457977267e-07, 0.001022135426731448, 0.0007150990959241952]
            ], [
                [0.01145965687215369, -0.008777986288223578, 0.0009721238940983024, -0.0031221902953149925, -0.00028407712108580586, -0.0012724031135282789, -0.0006326119956056747],
                [-0.008777986288223578, 0.013041426332937813, -0.0029865756606928667, 0.006331900557094506, 9.559035497315502e-06, 0.0024406834587570444, 0.0014287594355276935],
                [0.0009721238940983024, -0.0029865756606928667, 0.0034152598915310737, -0.002581106921966777, 0.0004522639757064418, -0.000852076337650784, -0.0005857498290054954],
                [-0.0031221902953149925, 0.006331900557094506, -0.002581106921966777, 0.009810980383044477, 0.0008736151709440963, 0.0010860803978182847, 0.0006697391255171004],
                [-0.00028407712108580586, 9.559035497315502e-06, 0.0004522639757064418, 0.0008736151709440963, 0.0006001212516048076, -0.00010125739990906646, -8.303407301620206e-05],
                [-0.0012724031135282789, 0.0024406834587570444, -0.000852076337650784, 0.0010860803978182847, -0.00010125739990906646, 0.007407002973675, 0.003900955856224677],
                [-0.0006326119956056747, 0.0014287594355276935, -0.0005857498290054954, 0.0006697391255171004, -8.303407301620206e-05, 0.003900955856224677, 0.0022591791781077122]
            ], [
                [0.005535015521031184, -0.00821906793857138, -0.00020570427832911688, -0.002668752048211221, -6.864778906597793e-05, -0.0014307392572495941, -0.001077024542994729],
                [-0.00821906793857138, 0.018179761764009334, 0.0022778230282678035, 0.004315155577228411, 0.0007631060207498307, -0.00021975210207021416, 0.0005096433146465212],
                [-0.00020570427832911688, 0.0022778230282678035, 0.005271896590861272, 0.0006736682269920776, 0.0027806802682252174, -0.002565395181735502, -0.001329325177933554],
                [-0.002668752048211221, 0.004315155577228411, 0.0006736682269920776, 0.011555565293658254, 0.0038222591339815847, 0.0027493022344800863, 0.0015450451479367493],
                [-6.864778906597793e-05, 0.0007631060207498307, 0.0027806802682252174, 0.0038222591339815847, 0.0032841073930092598, -0.0008820550248675384, -0.00044690343108490146],
                [-0.0014307392572495941, -0.00021975210207021416, -0.002565395181735502, 0.0027493022344800863, -0.0008820550248675384, 0.01479812250533739, 0.00672475164135033],
                [-0.001077024542994729, 0.0005096433146465212, -0.001329325177933554, 0.0015450451479367493, -0.00044690343108490146, 0.00672475164135033, 0.0035160180042092936]
            ]
        ]

        reduced_model_covar_matrices = [
            [
                [0.022648650334570496, -0.027645127220884753, 0.002743395757837704, -0.00019517536806345955],
                [-0.027645127220884753, 0.04084579216897273, -0.004654797440117838, -0.0014262888836593],
                [0.002743395757837704, -0.004654797440117838, 0.04777305454209432, 0.02683372194610089],
                [-0.00019517536806345955, -0.0014262888836593, 0.02683372194610089, 0.018412469396056032]
            ], [
                [0.010306188761245687, -0.008651122978231673, 0.00017446462922569904, -0.00045543844108437124],
                [-0.008651122978231673, 0.011728705974255975, -0.000651922187728199, 7.0917358039492e-05],
                [0.00017446462922569904, -0.000651922187728199, 0.005210963912387357, 0.002931902523192387],
                [-0.00045543844108437124, 7.0917358039492e-05, 0.002931902523192387, 0.002116691221292608]
            ], [
                [0.01678520002721852, -0.013126903237079976, -0.0008529987669254292, -0.0003002618319876916],
                [-0.013126903237079976, 0.022305926985780374, 0.0004166108774680984, -0.0006483711749512275],
                [-0.0008529987669254292, 0.0004166108774680984, 0.003748167800896899, 0.0023465972932717213],
                [-0.0003002618319876916, -0.0006483711749512275, 0.0023465972932717213, 0.001968965997741974]
            ], [
                [0.016107288005557895, -0.016942901504210104, -0.0002097482502627844, -0.00010264358905760681],
                [-0.016942901504210104, 0.045979483249919066, 0.002052812069807938, 0.001091693401271756],
                [-0.0002097482502627844, 0.002052812069807938, 0.016845560433143125, 0.010225807306905454],
                [-0.00010264358905760681, 0.001091693401271756, 0.010225807306905454, 0.007077800371372914]
            ], [
                [0.003422635196015581, -0.0032209052856532767, -1.39815301941015e-05, -9.99260970413752e-06],
                [-0.0032209052856532767, 0.006839391401543439, 2.3311159776708222e-05, -5.616191239811191e-05],
                [-1.39815301941015e-05, 2.3311159776708222e-05, 0.0018716601385022444, 0.001022135426731448],
                [-9.99260970413752e-06, -5.616191239811191e-05, 0.001022135426731448, 0.0007150990959241952]
            ], [
                [0.01145965687215369, -0.008777986288223578, -0.0012724031135282789, -0.0006326119956056747],
                [-0.008777986288223578, 0.013041426332937813, 0.0024406834587570444, 0.0014287594355276935],
                [-0.0012724031135282789, 0.0024406834587570444, 0.007407002973675, 0.003900955856224677],
                [-0.0006326119956056747, 0.0014287594355276935, 0.003900955856224677, 0.0022591791781077122]
            ], [
                [0.005535015521031184, -0.00821906793857138, -0.0014307392572495941, -0.001077024542994729],
                [-0.00821906793857138, 0.018179761764009334, -0.00021975210207021416, 0.0005096433146465212],
                [-0.0014307392572495941, -0.00021975210207021416, 0.01479812250533739, 0.00672475164135033],
                [-0.001077024542994729, 0.0005096433146465212, 0.00672475164135033, 0.0035160180042092936]
            ]
        ]

        covar_determinants = [2.503818305363261e-16, 1.2190023036202048e-19, 3.1646102970796588e-18, 1.6173029168915614e-15, 7.164199940608137e-23, 5.175307773962127e-19, 4.556970266962947e-18]
        reduced_model_covar_determinants = [2.3422368956389924e-08, 1.0366483271019205e-10, 3.385159012314613e-10, 6.5971093123341194e-09, 3.795131740193036e-12, 1.0013498514757284e-10, 1.903136540430233e-10]

        inverse_covar_matrices = [
            [
                [2068.873414732544, 1255.4300935364158, -1963.9242700193674, -899.2861848713734, 2943.8121086297842, -18.11842323622629, -46.75282329544081],
                [1255.4300935364176, 840.5309754070763, -1159.5277448028896, -582.7343734576117, 1880.8482134394608, -1.209856029795844, -45.93426239559742],
                [-1963.924270019372, -1159.5277448028921, 2260.69439735951, 1164.9790688427831, -3439.8774308672787, -11.217796443903971, 102.21993518921408],
                [-899.2861848713763, -582.7343734576134, 1164.9790688427847, 829.8183055199519, -2024.9846876700792, 5.899206356939, 23.723429823435815],
                [2943.8121086297892, 1880.8482134394633, -3439.8774308672796, -2024.9846876700776, 5691.938505647845, 20.87227661891154, -169.97575499606316],
                [-18.1184232362252, -1.209856029795154, -11.217796443905163, 5.899206356938324, 20.872276618913467, 125.94076035850581, -188.58887613091227],
                [-46.75282329544326, -45.934262395598914, 102.21993518921673, 23.72342982343725, -169.9757549960673, -188.5888761309122, 344.29175117111095]
            ], [
                [1496.8171342767978, 662.6976842414196, -1304.8623387407577, -511.97216740109087, 1525.881512788564, -19.01932632710178, 40.62058341138062],
                [662.6976842414196, 1019.7038491301781, -587.1825030690075, -910.7410766408553, 1286.4838542022464, -12.030451623515988, 4.879721852201644],
                [-1304.8623387407574, -587.1825030690073, 1402.508247992705, 644.852784250863, -1809.592646515749, -40.05350295709109, 98.95634679997286],
                [-511.972167401091, -910.7410766408553, 644.852784250863, 1046.6957342490746, -1463.8829970014046, 31.86415218804891, 7.5229977848749],
                [1525.8815127885646, 1286.4838542022471, -1809.5926465157497, -1463.882997001405, 3675.2648696047104, 25.163252753528077, -123.65910286095338],
                [-19.01932632710198, -12.030451623516068, -40.053502957090885, 31.864152188048973, 25.163252753527868, 926.244183147684, -1295.7181249972296],
                [40.62058341138096, 4.879721852201727, 98.9563467999725, 7.522997784874812, -123.65910286095303, -1295.7181249972296, 2297.2861508510027]
            ], [
                [3566.641419221215, 2357.4022555068473, -3535.6634461645704, -2340.1230192766398, 4165.094929195927, 281.8913124117738, -177.04303324748068],
                [2357.402255506847, 1616.3522716738344, -2358.6531869061255, -1598.5760918005492, 2805.7690731949374, 166.17966290897363, -112.90274885772979],
                [-3535.66344616457, -2358.653186906125, 3650.5858393100366, 2482.601467857534, -4371.609089839267, -371.82369447210294, 377.16727950404197],
                [-2340.1230192766393, -1598.5760918005485, 2482.601467857534, 1839.2189976468005, -3104.91136013646, -389.17930893138293, 553.5488084958024],
                [4165.094929195926, 2805.769073194937, -4371.609089839267, -3104.91136013646, 5544.619276600624, 445.5397307719116, -527.9990393821301],
                [281.8913124117735, 166.17966290897334, -371.8236944721026, -389.1793089313827, 445.5397307719112, 1367.4477212970132, -1799.946916540506],
                [-177.04303324748042, -112.90274885772943, 377.16727950404146, 553.5488084958021, -527.9990393821295, -1799.946916540506, 3005.6568743346756]
            ], [
                [138.45733040977768, 52.49166197030999, 10.698163635838378, 67.69308889038926, -73.80075193749911, -6.281354007821093, 8.968326480895424],
                [52.49166197030998, 42.98767388558653, 0.3053692020997214, 24.29285505069042, -6.713500087313867, -11.528166018011973, 11.81780289134441],
                [10.698163635838396, 0.30536920209973306, 183.38976240886416, 123.76636952818404, -334.2315210127521, -1.9894882285774025, 25.863597459344152],
                [67.69308889038932, 24.29285505069043, 123.76636952818403, 184.88694175125684, -327.0919671182833, 0.5923982933616394, 20.19195940251452],
                [-73.80075193749921, -6.713500087313899, -334.23152101275207, -327.0919671182833, 930.2791268983273, -57.947644470572264, 21.438319410861116],
                [-6.2813540078210846, -11.528166018011976, -1.9894882285773763, 0.592398293361688, -57.947644470572364, 500.44685258771375, -718.1278774079128],
                [8.968326480895406, 11.817802891344401, 25.86359745934414, 20.19195940251447, 21.43831941086117, -718.1278774079127, 1176.6256220992946]
            ], [
                [1006.3552927975084, 550.0220574202741, -15.72087215560552, 536.5682352053572, -468.2750592461094, 42.14090059092678, -77.11349505583065],
                [550.0220574202741, 454.9955525534457, -30.824869390689138, 320.25920808365305, -560.1761591509465, 1.291707779493946, -6.5477554527813995],
                [-15.720872155605797, -30.82486939068927, 910.0775478277359, 677.9668345841226, -2132.7018191842462, -87.8679749849518, 180.21629321067905],
                [536.5682352053568, 320.2592080836529, 677.9668345841227, 1132.3880512111089, -2099.60632794375, 53.35999249053167, -84.57690206876228],
                [-468.27505924610864, -560.1761591509462, -2132.7018191842462, -2099.6063279437494, 98199.81143258142, 31.99901751347683, -47.82061078308919],
                [42.140900590926776, 1.2917077794939382, -87.86797498495179, 53.35999249053168, 31.999017513476876, 2483.107436202298, -3570.029358229674],
                [-77.11349505583064, -6.547755452781389, 180.21629321067903, -84.5769020687623, -47.820610783089265, -3570.0293582296736, 6540.427969415803]
            ], [
                [205.00181150917652, 170.23139933702384, 32.88630585463846, -45.647878927460724, 129.88239717240631, 40.94392154830521, -94.1198301354415],
                [170.23139933702384, 268.1913043512978, 63.528268256564346, -114.05151032615287, 184.2481423635153, 17.606962283845238, -95.29085223630386],
                [32.88630585463848, 63.528268256564374, 567.1691665163905, 173.86231833670107, -655.8890732329265, -63.947441313901365, 150.8554575620803],
                [-45.64787892746072, -114.0515103261529, 173.86231833670112, 251.9854685168603, -516.2100745942382, 0.807177965354444, 9.35661996544876],
                [129.88239717240623, 184.24814236351529, -655.8890732329265, -516.2100745942381, 2975.337024744881, -43.03197930441705, 86.48196980758944],
                [40.94392154830527, 17.606962283845288, -63.947441313901344, 0.807177965354449, -43.0319793044171, 1519.5820887672091, -2641.9542662200624],
                [-94.11983013544159, -95.29085223630389, 150.8554575620802, 9.356619965448743, 86.48196980758954, -2641.9542662200624, 5077.964361009916]
            ], [
                [652.5708257637217, 286.4002385144235, -47.48455983066927, 49.228810423961, -55.04627981628542, -31.47391882814259, 171.9967270203159],
                [286.4002385144234, 211.23320388739023, -142.27157909168542, -62.89344309003439, 157.7662029073319, 31.102884999728367, -8.475043878928098],
                [-47.484559830669234, -142.27157909168545, 681.7361833530691, 288.6259242505225, -878.0137380270198, -45.977384612023165, 113.33100464746762],
                [49.22881042396102, -62.89344309003439, 288.6259242505224, 316.5612041253031, -608.7083949126653, -26.32309447729782, -32.81194287975318],
                [-55.04627981628565, 157.76620290733186, -878.0137380270197, -608.7083949126655, 1734.9285691365778, 64.59963093205316, -7.237006548432747],
                [-31.473918828142626, 31.10288499972835, -45.97738461202301, -26.323094477297783, 64.59963093205297, 543.423684990417, -1051.1088403077301],
                [171.99672702031597, -8.475043878928075, 113.33100464746737, -32.81194287975321, -7.237006548432504, -1051.1088403077301, 2405.02900802712]
            ]
        ]

        inverse_reduced_model_covar_matrices = [
            [
                [272.30326267780845, 182.31115584843502, -40.9422755242826, 76.6767819873952],
                [182.311155848435, 147.0791413150951, -19.97438171879356, 42.4357526142268],
                [-40.9422755242826, -19.974381718793556, 123.75374091281181, -182.33587051944366],
                [76.67678198739519, 42.435752614226786, -182.33587051944366, 324.14126445022674]
            ], [
                [263.832660714436, 190.4267075617705, -60.54314154986999, 134.24800146381887],
                [190.4267075617705, 226.4365429167191, 14.357705669519833, 13.499355824013046],
                [-60.543141549869986, 14.357705669519829, 921.4202872625397, -1289.7990610259646],
                [134.24800146381884, 13.499355824013021, -1289.7990610259646, 2287.4141653649262]
            ], [
                [114.04170782243978, 69.77197663846222, -27.8656714134046, 73.5766995801617],
                [69.77197663846223, 91.21723423340136, -77.70809951925145, 133.28930167443954],
                [-27.865671413404595, -77.70809951925146, 1133.587886910842, -1380.8389578922347],
                [73.5766995801617, 133.28930167443957, -1380.8389578922347, 2208.6649448309]
            ], [
                [101.57463256998027, 37.589836885544, -5.616161059644245, 3.789198247283468],
                [37.589836885544, 35.79182842842991, -7.1014395710954314, 5.28449568345971],
                [-5.616161059644234, -7.101439571095422, 484.1820572478423, -698.5187526738745],
                [3.789198247283438, 5.284495683459693, -698.5187526738745, 1149.7269809780723]
            ], [
                [526.858771197597, 249.29546576348747, -63.27054042503345, 117.37766904547071],
                [249.2954657634875, 264.8275926615559, -66.98465115590159, 120.02773018865659],
                [-63.270540425033474, -66.9846511559016, 2452.0554060986274, -3511.0195735366997],
                [117.37766904547071, 120.02773018865659, -3511.0195735366997, 6427.992165507683]
            ], [
                [183.78116354684408, 126.96929719911408, 54.29495192009049, -122.58816215610592],
                [126.9692971991141, 170.11354555015822, 40.74874088620492, -142.39157094982863],
                [54.2949519200905, 40.74874088620499, 1506.1061646832477, -2611.181189399888],
                [-122.58816215610602, -142.39157094982883, -2611.181189399888, 5007.126137096883]
            ], [
                [621.3501554982278, 274.55496468521744, -32.52919555872185, 212.7506245247155],
                [274.5549646852175, 178.89092239544047, 21.142882920338284, 17.733480323814206],
                [-32.52919555872191, 21.142882920338185, 540.0528321624116, -1045.9364076096142],
                [212.75062452471542, 17.733480323814312, -1045.9364076096144, 2347.4744607103094]
            ]
        ]

    return params, covar_matrices, reduced_model_covar_matrices, covar_determinants, reduced_model_covar_determinants,\
        inverse_covar_matrices, inverse_reduced_model_covar_matrices

